var escodegen = require("escodegen");
var generate = require("./generate");

var m = {"Program":{"B":{"null":{"_total":6,"VariableDeclaration":2,"IfStatement":1,"ForStatement":1,"WhileStatement":1,"FunctionDeclaration":1},"VariableDeclaration":{"VD_INIT":{"_total":2,"CallExpression":1,"ObjectExpression":1},"F":{"_total":2,"VariableDeclaration":1,"ExpressionStatement":1}},"IfStatement":{"IF_T":{"_total":1,"BinaryExpression":1},"IF_C":{"_total":1,"BlockStatement":1},"IF_A":{"_total":1,"ExpressionStatement":1},"F":{"_total":1,"_end":1}},"ForStatement":{"FOR_INIT":{"_total":1,"VariableDeclaration":1},"FOR_TEST":{"_total":1,"BinaryExpression":1},"FOR_UPDATE":{"_total":1,"UpdateExpression":1},"FOR_BODY":{"_total":1,"BlockStatement":1},"F":{"_total":1,"_end":1}},"WhileStatement":{"WHILE_TEST":{"_total":1,"BinaryExpression":1},"WHILE_BODY":{"_total":1,"BlockStatement":1},"F":{"_total":1,"_end":1}},"FunctionDeclaration":{"FUNC_BODY":{"_total":1,"BlockStatement":1},"F":{"_total":1,"_end":1}}}},"VariableDeclaration":{"VD_INIT":{"CallExpression":{"CALL_CALLEE":{"_total":2,"MemberExpression":2}},"FunctionExpression":{"FUNC_E_BODY":{"_total":1,"BlockStatement":1}}},"F":{"VariableDeclaration":{"VD_INIT":{"_total":4,"CallExpression":1,"Literal":3},"F":{"_total":4,"VariableDeclaration":3,"_end":1}},"IfStatement":{"IF_T":{"_total":3,"BinaryExpression":3},"IF_C":{"_total":3,"BlockStatement":3},"IF_A":{"_total":3,"_end":3},"F":{"_total":3,"_end":2,"ExpressionStatement":1}},"ExpressionStatement":{"EXPR":{"_total":1,"AssignmentExpression":1},"F":{"_total":1,"FunctionDeclaration":1}}}},"CallExpression":{"CALL_CALLEE":{"MemberExpression":{"ME_OBJ":{"_total":2,"Identifier":2},"ME_PROP":{"_total":2,"Identifier":2},"ME_COMPUTED":{"_total":2,"false":2}}}},"IfStatement":{"IF_T":{"BinaryExpression":{"BE_LEFT":{"_total":6,"Identifier":6},"BE_RIGHT":{"_total":6,"Literal":6},"BE_OP":{"_total":6,"==":5,">":1}}},"IF_C":{"BlockStatement":{"B":{"_total":6,"VariableDeclaration":1,"ExpressionStatement":5}}},"IF_A":{"ExpressionStatement":{"EXPR":{"_total":1,"AssignmentExpression":1}},"BlockStatement":{"B":{"_total":1,"ExpressionStatement":1}}},"F":{"ExpressionStatement":{"EXPR":{"_total":1,"UpdateExpression":1},"F":{"_total":1,"_end":1}},"ReturnStatement":{"RET_ARG":{"_total":1,"Identifier":1},"F":{"_total":1,"_end":1}}}},"BlockStatement":{"B":{"VariableDeclaration":{"VD_INIT":{"_total":4,"Literal":2,"Identifier":1,"FunctionExpression":1},"F":{"_total":4,"_end":1,"IfStatement":3}},"ExpressionStatement":{"EXPR":{"_total":7,"AssignmentExpression":6,"CallExpression":1},"F":{"_total":7,"_end":7}},"ReturnStatement":{"RET_ARG":{"_total":1,"Literal":1},"F":{"_total":1,"_end":1}},"IfStatement":{"IF_T":{"_total":1,"BinaryExpression":1},"IF_C":{"_total":1,"BlockStatement":1},"IF_A":{"_total":1,"BlockStatement":1},"F":{"_total":1,"ReturnStatement":1}},"ForStatement":{"FOR_INIT":{"_total":1,"VariableDeclaration":1},"FOR_TEST":{"_total":1,"BinaryExpression":1},"FOR_UPDATE":{"_total":1,"UpdateExpression":1},"FOR_BODY":{"_total":1,"BlockStatement":1},"F":{"_total":1,"_end":1}}}},"ExpressionStatement":{"EXPR":{"AssignmentExpression":{"AE_LEFT":{"_total":9,"Identifier":9},"AE_RIGHT":{"_total":9,"Literal":7,"AssignmentExpression":1,"CallExpression":1}},"UpdateExpression":{"UPDATE_OP":{"_total":1,"--":1},"UPDATE_ARG":{"_total":1,"Identifier":1}},"CallExpression":{"CALL_CALLEE":{"_total":1,"Identifier":1}}},"F":{"FunctionDeclaration":{"FUNC_BODY":{"_total":1,"BlockStatement":1},"F":{"_total":1,"FunctionDeclaration":1}},"IfStatement":{"IF_T":{"_total":1,"BinaryExpression":1},"IF_C":{"_total":1,"BlockStatement":1},"IF_A":{"_total":1,"_end":1},"F":{"_total":1,"_end":1}}}},"ForStatement":{"FOR_INIT":{"VariableDeclaration":{"VD_INIT":{"_total":2,"Literal":1,"Identifier":1}}},"FOR_TEST":{"BinaryExpression":{"BE_LEFT":{"_total":2,"Identifier":2},"BE_RIGHT":{"_total":2,"Literal":2},"BE_OP":{"_total":2,"<":1,">":1}}},"FOR_UPDATE":{"UpdateExpression":{"UPDATE_OP":{"_total":2,"++":1,"--":1},"UPDATE_ARG":{"_total":2,"Identifier":2}}},"FOR_BODY":{"BlockStatement":{"B":{"_total":2,"VariableDeclaration":1,"ExpressionStatement":1}}}},"WhileStatement":{"WHILE_TEST":{"BinaryExpression":{"BE_LEFT":{"_total":1,"Identifier":1},"BE_RIGHT":{"_total":1,"Literal":1},"BE_OP":{"_total":1,">":1}}},"WHILE_BODY":{"BlockStatement":{"B":{"_total":1,"VariableDeclaration":1}}}},"FunctionDeclaration":{"FUNC_BODY":{"BlockStatement":{"B":{"_total":3,"VariableDeclaration":1,"IfStatement":1,"ForStatement":1}}},"F":{"FunctionDeclaration":{"FUNC_BODY":{"_total":1,"BlockStatement":1},"F":{"_total":1,"ExpressionStatement":1}},"ExpressionStatement":{"EXPR":{"_total":1,"AssignmentExpression":1},"F":{"_total":1,"IfStatement":1}}}},"FunctionExpression":{"FUNC_E_BODY":{"BlockStatement":{"B":{"_total":1,"ReturnStatement":1}}}},"AssignmentExpression":{"AE_RIGHT":{"AssignmentExpression":{"AE_LEFT":{"_total":1,"Identifier":1},"AE_RIGHT":{"_total":1,"Literal":1}},"CallExpression":{"CALL_CALLEE":{"_total":1,"Identifier":1}}}}};

var syntax = generate.generateProgram(m);
console.log(escodegen.generate(syntax));
